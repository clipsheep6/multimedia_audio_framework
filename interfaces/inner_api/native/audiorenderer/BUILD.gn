# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

pulseaudio_dir = "//third_party/pulseaudio"

config("audio_renderer_config") {
  include_dirs = [
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiorenderer/include",
    "//foundation/multimedia/audio_framework/frameworks/native/audiorenderer/include",
    "//foundation/multimedia/audio_framework/frameworks/native/audiosession/include",
    "//foundation/multimedia/audio_framework/frameworks/native/audiostream/include",
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiocommon/include",
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiomanager/include",
    "//foundation/multimedia/audio_framework/services/include",
    "//foundation/multimedia/audio_framework/services/include/audio_service/client",
    "//foundation/multimedia/audio_framework/services/test",
    "//utils/native/base/include",
    "$pulseaudio_dir/src",
    "$pulseaudio_dir/confgure/src",
  ]

  cflags = [
    "-Wall",
    "-Werror",
  ]
}

ohos_shared_library("audio_renderer") {
  install_enable = true

  configs = [ ":audio_renderer_config" ]

  sources = [
    "//foundation/multimedia/audio_framework/frameworks/native/audiorenderer/src/audio_renderer.cpp",
    "//foundation/multimedia/audio_framework/frameworks/native/audiorenderer/src/audio_renderer_proxy_obj.cpp",
  ]

  deps = [
    "//foundation/multimedia/audio_framework/frameworks/native/audiopolicy:audio_policy_client",
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiomanager:audio_client",
    "//utils/native/base:utils",
  ]

  public_configs = [ ":audio_external_library_config" ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimedia_audio_framework"
  subsystem_name = "multimedia"
}

ohos_executable("audio_renderer_test") {
  install_enable = false

  sources = [ "//foundation/multimedia/audio_framework/services/test/audio_renderer_test.cpp" ]

  configs = [ ":audio_renderer_config" ]

  deps = [ ":audio_renderer" ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimedia_audio_framework"
  subsystem_name = "multimedia"
}

ohos_executable("audio_latency_accuracy_test") {
  install_enable = false

  sources = [ "//foundation/multimedia/audio_framework/services/test/audio_renderer_test.cpp" ]

  configs = [ ":audio_renderer_config" ]
  cflags = [ "-DLATENCY_ACCURACY_TEST" ]

  deps = [ ":audio_renderer" ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimedia_audio_framework"
  subsystem_name = "multimedia"
}

ohos_executable("audio_render_mode_callback_test") {
  install_enable = false

  sources = [ "//foundation/multimedia/audio_framework/services/test/audio_render_mode_callback_test.cpp" ]

  configs = [ ":audio_renderer_config" ]

  deps = [ ":audio_renderer" ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimedia_audio_framework"
  subsystem_name = "multimedia"
}

ohos_executable("audio_voip_test") {
  install_enable = false

  sources = [
    "//foundation/multimedia/audio_framework/services/test/audio_voip_test.cpp",
  ]

  include_dirs = [
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiocapturer/include",
    "//foundation/multimedia/audio_framework/frameworks/native/audiocapturer/include",
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiorenderer/include",
    "//foundation/multimedia/audio_framework/frameworks/native/audiorenderer/include",
    "//foundation/multimedia/audio_framework/frameworks/native/audiosession/include",
    "//foundation/multimedia/audio_framework/frameworks/native/audiostream/include",
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiocommon/include",
    "//foundation/multimedia/audio_framework/services/include",
    "//foundation/multimedia/audio_framework/services/include/audio_service/client",
    "//utils/native/base/include",
    "$pulseaudio_dir/src",
    "$pulseaudio_dir/confgure/src",
  ]

  cflags = [
    "-Wall",
    "-Werror",
  ]

  configs = [ ":audio_renderer_config" ]

  deps = [
    ":audio_renderer",
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiocapturer:audio_capturer",
  ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimedia_audio_framework"
  subsystem_name = "multimedia"
}

ohos_executable("audio_interrupt_test") {
  install_enable = false

  sources = [ "//foundation/multimedia/audio_framework/services/test/audio_interrupt_test.cpp" ]

  configs = [ ":audio_renderer_config" ]

  deps = [
    ":audio_renderer",
    "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiomanager:audio_client",
  ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimedia_audio_framework"
  subsystem_name = "multimedia"
}

ohos_executable("interrupt_multi_renderer_test") {
  install_enable = false

  sources = [ "//foundation/multimedia/audio_framework/services/test/interrupt_multi_renderer_test.cpp" ]

  configs = [ ":audio_renderer_config" ]

  deps = [ ":audio_renderer" ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimedia_audio_framework"
  subsystem_name = "multimedia"
}

config("audio_external_library_config") {
  include_dirs = [ "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiorenderer/include" ]
}
